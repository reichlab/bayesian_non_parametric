





/**
 * @file
 *
 * @author Generated by LibBi
 * $Rev$
 * $Date$
 */
#ifndef LIBBI_VARCOORD13_HPP
#define LIBBI_VARCOORD13_HPP

/**
 * Coordinate: 13.
 */
class VarCoord13 {
public:
  /**
   * Default constructor.
   */
  CUDA_FUNC_BOTH VarCoord13();
  
  

  
  /**
   * Construct from serial index.
   *
   * @param ix Serial index.
   */
  CUDA_FUNC_BOTH VarCoord13(const int ix);
  
  
  /**
   * Increment to next coordinate in serial ordering.
   */
  CUDA_FUNC_BOTH void inc();
   
  /**
   * Decrement to previous coordinate in serial ordering.
   */
  CUDA_FUNC_BOTH void dec();

  /**
   * Recover serial index.
   * 
   * @return Serial index for coordinate.
   */
  CUDA_FUNC_BOTH int index() const;
  
  /**
   * Set serial index.
   *
   * @param ix Serial index for coordinate.
   *
   * Sets the coordinate to be equivalent to the given serial index.
   */
  CUDA_FUNC_BOTH void setIndex(const int ix);

  /**
   * Prefix increment operator.
   */
  CUDA_FUNC_BOTH VarCoord13& operator++() {
    inc();
    return *this;
  }
  
  /**
   * Postfix increment operator.
   */
  CUDA_FUNC_BOTH VarCoord13 operator++(int) {
    VarCoord13 tmp(*this);
    inc();
    return tmp;
  }
  
  /**
   * Prefix decrement operator.
   */
  CUDA_FUNC_BOTH VarCoord13& operator--() {
    dec();
    return *this;
  }
  
  /**
   * Postfix decrement operator.
   */
  CUDA_FUNC_BOTH VarCoord13 operator--(int) {
    VarCoord13 tmp(*this);
    dec();
    return tmp;
  }

  
  
  
};

inline VarCoord13::VarCoord13() {
}




inline VarCoord13::VarCoord13(const int ix) {
  setIndex(ix);
}


inline void VarCoord13::inc() {
  
  
}

inline void VarCoord13::dec() {
  
  
}

inline int VarCoord13::index() const {
  
  return 0;
  
}

inline void VarCoord13::setIndex(const int ix) {  
}

#endif
